#!/bin/bash 
# B9 June 2017


usage() {
    cat <<EOF

mktrans: Convert images into shaped transparent pngs by floodfilling
	 the background with transparency (antialiased alpha channel).
         Top left pixel is assumed to be the background color.

Usage: mktrans <files ... >

Output filenames will be the same as input, except suffixed with
"-transparent.png". E.g., 'mktrans foo.gif bar.jpg' creates
foo-transparent.png and bar-transparent.png.

This is similar to ImageMagick's bg_removal script, but much higher
quality. (It's also faster and simpler to use.) 

For a sample, run these commands:

    convert logo: logo.png
    mktrans logo.png
    display logo-transparent.png

Side note: This creates an antialiased (blurred) alpha channel that is
also eroded by half a pixel to avoid halos. Of course, ImageMagick's
morphological operations don't (yet?) work at the subpixel level, so
I'm blowing up the alpha channel to 200% before eroding.
EOF
    exit 0
}

# Fuzz is how far off the color can be (in percent).
# This is important for getting good antialiasing.
fuzz=15

[[ "$#" != 0 ]] || usage


for filename; do
    # Get color of top left pixel
    color=$(convert "$filename" -format "%[pixel:p{0,0}]" info:-)

    options=""
    # Remove any existing alpha channel
    options+=" -alpha off"
    # Add a 1 pixel border so we'll fill from the bottom and sides as well.
    options+=" -bordercolor $color -border 1 "
    # In a new stack, make a copy of the image
    options+=" ( +clone "
    # (copy) floodfill with transparency ("none") starting at top-left
    options+="   -fuzz $fuzz% -fill none -floodfill +0+0 $color"
    # (copy) extract just the transparency (alpha channel)
    options+="   -alpha extract"
    # (copy) blow up the alpha channel so we can do sub-pixel morphology
    options+="   -geometry 200%"
    # (copy) blur the alpha channel to make it antialiased
    options+="	 -blur 0x0.5"
    # (copy) shrink the region that is opaque by half a pixel.
    options+="	 -morphology erode square:1"
    # (copy) scale the alpha channel back to normal size, end the stack.
    options+="	 -geometry 50% ) "
    # Compose the original image and the copy's alpha channel.
    options+=" -compose CopyOpacity -composite"
    # Remove the 1 pixel border we added
    options+=" -shave 1"

    convert "$filename" $options "${filename%.*}-transparent.png"
done
